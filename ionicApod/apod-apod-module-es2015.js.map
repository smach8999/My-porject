{"version":3,"sources":["./src/app/apod/apod.page.html","./node_modules/safe-pipe/index.js","./node_modules/safe-pipe/safe.module.js","./node_modules/safe-pipe/safe.pipe.js","./src/app/apod.service.ts","./src/app/apod/apod.module.ts","./src/app/apod/apod.page.scss","./src/app/apod/apod.page.ts"],"names":[],"mappings":"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","file":"apod-apod-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title *ngIf=\\\"apod\\\">{{ apod.title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card *ngIf=\\\"apod\\\"> \\n    <ion-button style=\\\"margin:0;\\\" expand=\\\"full\\\" size=\\\"large\\\" [routerLink]=\\\"['/apod', date]\\\">Random</ion-button>\\n    <ion-img *ngIf=\\\"apod.media_type=='image'\\\" [src]=\\\"apod.url\\\" alt=\\\"{{ apod.title }}\\\"></ion-img>\\n    <div id=\\\"apodVideo\\\" *ngIf=\\\"apod.media_type=='video'\\\">\\n      <iframe [src]=\\\"apod.url | safe: 'resourceUrl'\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\\n    </div>\\n    <ion-card-header>\\n      <ion-card-subtitle>\\n        <span *ngIf=\\\"apod.copyright\\\">&copy; {{  apod.copyright }},</span>\\n        {{ apod.date | date }}\\n      </ion-card-subtitle>\\n      <ion-card-title>{{ apod.title }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      {{ apod.explanation }}\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./safe.pipe\"));\n__export(require(\"./safe.module\"));\n//# sourceMappingURL=/home/embarq/.projects/safe-pipe/index.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar safe_pipe_1 = require(\"./safe.pipe\");\nvar SafePipeModule = (function () {\n    function SafePipeModule() {\n    }\n    return SafePipeModule;\n}());\nSafePipeModule = __decorate([\n    core_1.NgModule({\n        declarations: [safe_pipe_1.SafePipe],\n        exports: [safe_pipe_1.SafePipe],\n        imports: [common_1.CommonModule]\n    })\n], SafePipeModule);\nexports.SafePipeModule = SafePipeModule;\n//# sourceMappingURL=/home/embarq/.projects/safe-pipe/safe.module.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar SafePipe = (function () {\n    function SafePipe(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    SafePipe.prototype.transform = function (value, type) {\n        switch (type) {\n            case 'html':\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'resourceUrl':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            default:\n                throw new Error(\"SafePipe unable to bypass security for invalid type: \" + type);\n        }\n    };\n    return SafePipe;\n}());\nSafePipe = __decorate([\n    core_1.Pipe({\n        name: 'safe'\n    }),\n    __metadata(\"design:paramtypes\", [platform_browser_1.DomSanitizer])\n], SafePipe);\nexports.SafePipe = SafePipe;\n//# sourceMappingURL=/home/embarq/.projects/safe-pipe/safe.pipe.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Apod } from './apod.model';\n\nimport { NgApodConfig } from '../../../ng-apod/config/ng-apod.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApodService {\n\n  private url:string;\n\n  constructor(\n    private http:HttpClient,\n    private ngApodConfig: NgApodConfig\n  ){\n    this.url=`https://api.nasa.gov/planetary/apod?api_key=${this.ngApodConfig.key}`;\n  }\n\n  getApod(date:string): Observable<Apod>{\n    return this.http.get<Apod>(`${this.url}&date=${date}`);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ApodPage } from './apod.page';\n\nimport { SafePipeModule } from 'safe-pipe';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApodPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SafePipeModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ApodPage]\n})\nexport class ApodPageModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fwb2QvYXBvZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApodService } from '../apod.service';\nimport { Apod } from '../apod.model';\n\n@Component({\n  selector: 'app-apod',\n  templateUrl: './apod.page.html',\n  styleUrls: ['./apod.page.scss'],\n})\nexport class ApodPage {\n\n  apod: Apod;\n  date: string;\n\n  constructor(\n    private apodService: ApodService,\n    private route: ActivatedRoute\n  ) {}\n\n  ionViewWillEnter() {\n    this.route.params.subscribe(\n      (params)=>{\n        if(params['date']){\n          this.getApod(params['date']);\n        // }else{\n        //   this.getApod(new Date().toISOString().slice(0, 10));\n        // }\n      }else{\n        var date=new Date;\n        date.setDate(date.getDate()-1);\n        this.getApod(date.toISOString().slice(0, 10));\n      }\n      }\n    );\n  }\n  \n  randomDate(start, end){\n\n    let date = new Date(\n      start.getTime() + Math.random() * (end.getTime() - start.getTime())\n    );\n\n    return new Date(\n      (date.getTime() - date.getTimezoneOffset()*60000)\n    ).toISOString().slice(0, 10);\n  }\n\n  getApod(date:string):void {\n    this.apodService.getApod(date)\n      .subscribe((result:any) => {\n\n        this.apod = result;\n\n        this.date = this.randomDate(\n          new Date(2019,10,20),\n          new Date()\n        );\n\n      });\n  }\n\n}"],"sourceRoot":""}